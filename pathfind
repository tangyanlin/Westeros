#! /bin/sh

#在查找路径下寻找一个或多个原始文件或文件模式

IFS='
    '
OLDPATH=$PATH
PATH=/bin:/usr/bin
export PATH

error()
{
    echo "$@" 1>&2
    usage_and_exit 1
}

usage()
{
    echo "Usage: $PROGAM [--all] [--?] [--help] [--version] envvar partern(s)"
}

usage_and_exit()
{
    usage
    exit $1
}

version()
{
    echo "$PROGRAM version $VERSION"
}

warning()
{
    echo "$@" 1>&2
    EXITCODE=`expr $EXITCODE + 1`
}

all=no
envvar=
EXITCODE=0
PROGAM=`basename $0`
VERSION=1.0

while test $# -gt 0
do
    case $1 in
    --all | --al | --a | -all | -al | -a )
        all=yes
        ;;
    --help | --hel | --he | --h | '--?' | -help \
        | -hel | -he | -h | '-?')
        usage_and_exit 0
        ;;
    --version | --versio | --versi | --vers | --ver \
        | --ve | --v | -version | -versio | -versi | \
        -vers | -ver | -ve | -v)
        version
        exit 0
        ;;
    -*)
        error "Unrecgnized option: $1"
        ;;
    *)
        break
        ;;
    esac
    shift
done

envvar="$1"
test $# -gt 0 && shift
test "x$envvar" = "xPATH" && envvar=OLDPATH

dirpath=`eval echo '${'"$envvar"'}' 2>/dev/null \
    | tr : ' ' `

if test -z "$envvar"
then
    error Environment varible missing or empty
elif test "x$dirpath" = "x$envvar"
then
    error "Broken sh on this platform: cannot expand $envvar"
elif test -z "$dirpath"
then
    error Empty diretory search path
elif test $# -eq 0
then
    exit 0
fi

for pattern in "$@"
do
    result=
    for dir in $dirpath
    do
        for file in $dir/$pattern
        do
            if test -f "$file"
            then
                result="$file"
                echo $result
                test "$all" = "no" && break 2
            fi
        done
    done
    test -z "$result" && warning "$partern: not found"
done

test $EXITCODE -gt 125 && EXITCODE=125
exit $EXITCODE
